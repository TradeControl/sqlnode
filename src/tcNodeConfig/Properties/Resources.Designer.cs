//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TradeControl.Node.Config.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TradeControl.Node.Config.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a new data user to {0}. The password can be left blank if the user can already log into {1} and you are not automatically logging in as them. .
        /// </summary>
        internal static string AddSqlUserToDatabase {
            get {
                return ResourceManager.GetString("AddSqlUserToDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note that an administator account has already been added. By default new users are denied access to system tables and user accounts. Log in with your administrator account to amend user profiles..
        /// </summary>
        internal static string AddUserNote {
            get {
                return ResourceManager.GetString("AddUserNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a new data user to {0}. Windows users must first be granted login permissions to {1} using Sql Management Studio..
        /// </summary>
        internal static string AddWinUserToDatabase {
            get {
                return ResourceManager.GetString("AddWinUserToDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The basic configuration has been installed on {0}. Try logging on with a client before loading one of the demos..
        /// </summary>
        internal static string BasicSetupInstalled {
            get {
                return ResourceManager.GetString("BasicSetupInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has been successfully configured.
        /// </summary>
        internal static string ConfigurationSuccess {
            get {
                return ResourceManager.GetString("ConfigurationSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is already configured..
        /// </summary>
        internal static string ConfigureDisabled {
            get {
                return ResourceManager.GetString("ConfigureDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the above details and configure..
        /// </summary>
        internal static string ConfigureEnabled {
            get {
                return ResourceManager.GetString("ConfigureEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Failed!.
        /// </summary>
        internal static string ConnectionFailed {
            get {
                return ResourceManager.GetString("ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully Connected..
        /// </summary>
        internal static string ConnectionSucceeded {
            get {
                return ResourceManager.GetString("ConnectionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data source not found.
        /// </summary>
        internal static string DataSourceNotFound {
            get {
                return ResourceManager.GetString("DataSourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error log write failure. Check file permissions on {0}..
        /// </summary>
        internal static string ErrorLogFailure {
            get {
                return ResourceManager.GetString("ErrorLogFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp, Message, Source, Target, Inner Message.
        /// </summary>
        internal static string ErrorLogHeader {
            get {
                return ResourceManager.GetString("ErrorLogHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation in progress....
        /// </summary>
        internal static string ExecutionInProgress {
            get {
                return ResourceManager.GetString("ExecutionInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install a basic configuration on server {0}, {1}.
        /// </summary>
        internal static string InstallBasicSetupuration {
            get {
                return ResourceManager.GetString("InstallBasicSetupuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo data will be installed on server {0}, {1}.
        /// </summary>
        internal static string InstallDemoData {
            get {
                return ResourceManager.GetString("InstallDemoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BOM demo has been installed on {0}..
        /// </summary>
        internal static string InstalledManDemo {
            get {
                return ResourceManager.GetString("InstalledManDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Trade Control schema has been installed..
        /// </summary>
        internal static string InstalledSchema {
            get {
                return ResourceManager.GetString("InstalledSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The services demo has been installed on {0}..
        /// </summary>
        internal static string InstalledServicesDemo {
            get {
                return ResourceManager.GetString("InstalledServicesDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} on {1} is already configured..
        /// </summary>
        internal static string InstanceIsConfigured {
            get {
                return ResourceManager.GetString("InstanceIsConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance must have a basic configuration before this demo can be installed.
        /// </summary>
        internal static string InstanceIsUnconfigured {
            get {
                return ResourceManager.GetString("InstanceIsUnconfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is up to date on version {1}..
        /// </summary>
        internal static string InstanceIsUpToDate {
            get {
                return ResourceManager.GetString("InstanceIsUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade {0} from version {1} to {2}.
        /// </summary>
        internal static string InstanceNeedsUpgrading {
            get {
                return ResourceManager.GetString("InstanceNeedsUpgrading", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to /**************************************************************************************
        ///Trade Control
        ///Node Creation Script - SCHEMA + LOGIC + CONTROL DATA
        ///Release: 3.23.1
        ///
        ///Date: 1 August 2019
        ///Author: Ian Monnox
        ///
        ///Trade Control by Trade Control Ltd is licensed under GNU General Public License v3.0. 
        ///
        ///You may obtain a copy of the License at
        ///
        ///	https://www.gnu.org/licenses/gpl-3.0.en.html
        ///
        ///************************************************************************ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tc_create_node {
            get {
                return ResourceManager.GetString("tc_create_node", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to /**************************************************************************************
        ///Trade Control
        ///Node Configuration Procedures
        ///Release: 3.23.2
        ///
        ///Date: 1 August 2019
        ///Author: Ian Monnox
        ///
        ///Trade Control by Trade Control Ltd is licensed under GNU General Public License v3.0. 
        ///
        ///You may obtain a copy of the License at
        ///
        ///	https://www.gnu.org/licenses/gpl-3.0.en.html
        ///
        ///Instructions:
        ///This script should be applied by the TC Node Configuration app.
        ///It inserts the  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tc_upgrade_3_23_2 {
            get {
                return ResourceManager.GetString("tc_upgrade_3_23_2", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to /**************************************************************************************
        ///Trade Control
        ///Sample upgrade script
        ///Release: 3.24.1
        ///
        ///Date: 1 August 2019
        ///Author: Ian Monnox
        ///
        ///Trade Control by Trade Control Ltd is licensed under GNU General Public License v3.0. 
        ///
        ///You may obtain a copy of the License at
        ///
        ///	https://www.gnu.org/licenses/gpl-3.0.en.html
        ///
        ///Purpose:
        ///Demonstrates how upgrades are applied.
        ///The script removes all references to Fax Machines fro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tc_upgrade_3_24_1 {
            get {
                return ResourceManager.GetString("tc_upgrade_3_24_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Datasource is not a recognised configuration.
        /// </summary>
        internal static string UnrecognisedDatasource {
            get {
                return ResourceManager.GetString("UnrecognisedDatasource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade {0}.
        /// </summary>
        internal static string UpgradeHeader {
            get {
                return ResourceManager.GetString("UpgradeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has been added successfully..
        /// </summary>
        internal static string UserAddedSuccessfully {
            get {
                return ResourceManager.GetString("UserAddedSuccessfully", resourceCulture);
            }
        }
    }
}
